{
    "name": "chartographer",
    "displayName": "Chartographer",
    "description": "Easily visualize function call hierarchy in a neat graph representation",
    "version": "1.1.0",
    "publisher": "ArpinFidel",
    "engines": {
        "vscode": "^1.65.0"
    },
    "categories": [
        "Visualization"
    ],
    "activationEvents": [
        "onWebviewPanel:Chartographer.previewCallGraph"
    ],
    "main": "./out/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "Chartographer.addHierarchy",
                "title": "Chartographer: Add Function to Existing Graph"
            },
            {
                "command": "Chartographer.showAllOutgoingCallGraph",
                "title": "Chartographer: Show All Outgoing Call Graph"
            },
            {
                "command": "Chartographer.showAllIncomingCallGraph",
                "title": "Chartographer: Show All Incoming Call Graph"
            },
            {
                "command": "Chartographer.showAllCallGraph",
                "title": "Chartographer: Show All Call Graph"
            },
            {
                "command": "Chartographer.showOutgoingCallGraph",
                "title": "Chartographer: Show Outgoing Call Graph"
            },
            {
                "command": "Chartographer.showIncomingCallGraph",
                "title": "Chartographer: Show Incoming Call Graph"
            },
            {
                "command": "Chartographer.showCallGraph",
                "title": "Chartographer: Show Call Graph"
            },
            {
                "command": "Chartographer.showCallGraphCustomDepth",
                "title": "Chartographer: Show Call Graph with Custom Depth"
            },
            {
                "command": "Chartographer.showOutputChannel",
                "title": "Chartographer: Show Output Channel"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "Chartographer.addHierarchy"
                },
                {
                    "command": "Chartographer.showAllOutgoingCallGraph"
                },
                {
                    "command": "Chartographer.showAllIncomingCallGraph"
                },
                {
                    "command": "Chartographer.showAllCallGraph"
                },
                {
                    "command": "Chartographer.showOutgoingCallGraph"
                },
                {
                    "command": "Chartographer.showIncomingCallGraph"
                },
                {
                    "command": "Chartographer.showCallGraph"
                },
                {
                    "command": "Chartographer.showOutputChannel"
                }
            ]
        },
        "configuration": [
            {
                "title": "General",
                "properties": {
                    "chartographer.ignoreOnGenerate": {
                        "description": "Glob patterns of files to ignore when fetching call hierarchy for the call graph",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "chartographer.highlightRoots": {
                        "description": "Color root nodes in the call graph",
                        "type": "boolean",
                        "default": true
                    },
                    "chartographer.highlightLeaves": {
                        "description": "Color leaf nodes in the call graph",
                        "type": "boolean",
                        "default": false
                    },
                    "chartographer.ignoreNonWorkspaceFiles": {
                        "description": "Ignore files that are not part of the current workspace",
                        "type": "boolean",
                        "default": true
                    },
                    "chartographer.defaultGraphLayoutAlgorithm": {
                        "description": "Default graph layout algorithm to use",
                        "type": "string",
                        "enum": [
                            "klay",
                            "elk",
                            "dagre"
                        ],
                        "enumDescriptions": [
                            "Klay",
                            "ELK",
                            "Dagre"
                        ],
                        "default": "dagre"
                    },
                    "chartographer.respectGitignore": {
                        "description": "Respect .gitignore patterns when generating call graphs",
                        "type": "boolean",
                        "default": false
                    },
                    "chartographer.colorScheme": {
                        "description": "Color scheme for the call graph",
                        "type": "string",
                        "enum": [
                            "default",
                            "highContrast"
                        ],
                        "enumDescriptions": [
                            "Follow VSCode color scheme (default)",
                            "High contrast color scheme"
                        ],
                        "default": "default"
                    },
                    "chartographer.nodeDisplayFormat": {
                        "description": "Format for displaying file nodes in the call graph. \n Supported tokens:\n - $path: The relative path (same as default)\n - $path{N}: The last N segments of the path\n - $fullPath: The full path\n - $fileName: Just the file name\n - $fileExt: Just the file extension",
                        "type": "string"
                    },
                    "chartographer.trimFunctionNames": {
                        "description": "Trim function names at the first non-alphabetic character (experimental)",
                        "type": "boolean",
                        "default": false
                    }
                }
            },
            {
                "title": "Colors",
                "properties": {
                    "chartographer.colors.nodeBackgroundColor": {
                        "description": "Override background color for nodes",
                        "type": "string"
                    },
                    "chartographer.colors.nodeColor": {
                        "description": "Override text color for nodes",
                        "type": "string"
                    },
                    "chartographer.colors.nodeBorderColor": {
                        "description": "Override border color for nodes",
                        "type": "string"
                    },
                    "chartographer.colors.highlightedLeafNodeBackgroundColor": {
                        "description": "Override background color for highlighted leaf nodes",
                        "type": "string"
                    },
                    "chartographer.colors.highlightedLeafNodeColor": {
                        "description": "Override text color for highlighted leaf nodes",
                        "type": "string"
                    },
                    "chartographer.colors.highlightedRootNodeBackgroundColor": {
                        "description": "Override background color for highlighted root nodes",
                        "type": "string"
                    },
                    "chartographer.colors.highlightedRootNodeColor": {
                        "description": "Override text color for highlighted root nodes",
                        "type": "string"
                    },
                    "chartographer.colors.nodeGroupBackgroundColor": {
                        "description": "Override background color for node groups",
                        "type": "string"
                    },
                    "chartographer.colors.edgeLineColor": {
                        "description": "Override line color for edges",
                        "type": "string"
                    },
                    "chartographer.colors.edgeArrowColor": {
                        "description": "Override arrow color for edges",
                        "type": "string"
                    },
                    "chartographer.colors.searchHighlightBackgroundColor": {
                        "description": "Override background color for search highlight",
                        "type": "string"
                    },
                    "chartographer.colors.searchHighlightColor": {
                        "description": "Override text color for search highlight",
                        "type": "string"
                    },
                    "chartographer.colors.searchHighlightBorderColor": {
                        "description": "Override border color for search highlight",
                        "type": "string"
                    }
                }
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "yarn run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "pretest": "yarn run compile && yarn run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/node": "14.x",
        "@types/vscode": "^1.65.0",
        "@typescript-eslint/eslint-plugin": "^5.16.0",
        "@typescript-eslint/parser": "^5.16.0",
        "@vscode/test-electron": "^2.1.3",
        "eslint": "^8.11.0",
        "mocha": "^9.2.2",
        "typescript": "^4.6.3"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/arpinfidel/vscode-chartographer.git"
    },
    "license": "Apache",
    "icon": "assets/icon.png",
    "bugs": {
        "url": "https://github.com/arpinfidel/vscode-chartographer/issues"
    },
    "homepage": "https://github.com/arpinfidel/vscode-chartographer/blob/master/README.md",
    "keywords": [
        "graphviz",
        "call graph",
        "dot"
    ],
    "dependencies": {
        "concat-map": "^0.0.2",
        "minimatch": "^9.0.3"
    }
}
